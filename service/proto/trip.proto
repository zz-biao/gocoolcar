syntax = "proto3";

package coolcar;
option go_package="coolcar/proto/gen/go;trippb";

//install 在proto文件夹下
// protoc -I .  --go_out ./gen/go/ --go_opt paths=source_relative  --go-grpc_out ./gen/go/ --go-grpc_opt=require_unimplemented_servers=false,paths=source_relative  ./trip.proto

// protoc --go_out=./gen/go/ --go_opt=paths=source_relative  --go-grpc_out=./gen/go/  --go-grpc_opt=paths=source_relative  ./trip.proto
//require_unimplemented_servers=false

message Location {
    double lat = 1;
    double lon =2;
}

enum TripStatus{
    TS_NOT_SPECIFIED = 0;
    NOT_STARTED = 1;
    IN_PROGRESS = 2;
    FINISHED = 3;
    PAID = 4;
}

message Trip {
    string start = 1;
    string end = 2;
    int64 duration_sec = 3;
    int64 fee_cent = 4;
    Location start_pos = 5;
    Location end_pos = 6;
    repeated Location path_pos = 7;
    TripStatus status = 8;
}

message GetTripRequest{
    string id = 1;
}

message GetTripResponse{
    string id = 1;
    Trip trip = 2;
}

service TripService{
    rpc GetTrip(GetTripRequest) returns (GetTripResponse) ;
}
